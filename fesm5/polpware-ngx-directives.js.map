{"version":3,"file":"polpware-ngx-directives.js","sources":["ng://@polpware/ngx-directives/lib/rest-window-height/rest-window-height.directive.ts","ng://@polpware/ngx-directives/lib/ngx-directives.module.ts","ng://@polpware/ngx-directives/public-api.ts","ng://@polpware/ngx-directives/polpware-ngx-directives.ts"],"sourcesContent":["import { Directive, ElementRef, AfterViewInit, Input, HostListener } from '@angular/core';\n\nfunction findAncestorByClass(el, cls: string) {\n    while (el.parentElement) {\n        el = el.parentElement;\n        if (el.classList.contains(cls)) {\n            break;\n        }\n    }\n    return el;\n}\n\n/**\n * Defines a directive for setting the height of the element in question according \n * to a formula.\n * \n */\n@Directive({\n    selector: '[polpRestWindowHeight]'\n})\nexport class RestWindowHeightDirective implements AfterViewInit {\n\n    @Input() bottomOffset = 0;\n    @Input() minHeight = 0;\n    @Input() fixedHeight = 0;\n    @Input() maxHeight = 0;\n    @Input() topOffset = 0;\n    @Input() containerClass = '';\n\n    constructor(private el: ElementRef) { }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    private computeHeight() {\n        const nativeElement = this.el.nativeElement;\n        // Case 1: fixed Height \n        if (this.fixedHeight) {\n            this.el.nativeElement.style.height = this.fixedHeight + 'px';\n            return;\n        }\n\n        let bodyRect: DOMRect;\n        if (this.containerClass) {\n            const p = findAncestorByClass(nativeElement, this.containerClass);\n            bodyRect = p.getBoundingClientRect();\n        } else {\n            bodyRect = document.body.getBoundingClientRect();\n        }\n\n        const elemRect = nativeElement.getBoundingClientRect();\n\n        const offset = elemRect.top - bodyRect.top;\n\n        const screenHeight = window.innerHeight;\n\n        let height = screenHeight - offset - this.bottomOffset - this.topOffset;\n\n        height = (height > this.minHeight) ? height : this.minHeight;\n\n        if (this.maxHeight) {\n            height = (height > this.maxHeight) ? this.maxHeight : height;\n        }\n\n        this.el.nativeElement.style.height = height + 'px';\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RestWindowHeightDirective } from './rest-window-height/rest-window-height.directive';\n\n@NgModule({\n    declarations: [\n        RestWindowHeightDirective],\n    imports: [\n    ],\n    exports: [RestWindowHeightDirective]\n})\nexport class PolpNgxDirectivesModule { }\n","/*\n * Public API Surface of ngx-directives\n */\n\nexport * from './lib/rest-window-height/rest-window-height.directive';\nexport * from './lib/ngx-directives.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}