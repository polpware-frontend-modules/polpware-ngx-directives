{"version":3,"file":"polpware-ngx-directives.mjs","sources":["../../../../projects/polpware/ngx-directives/src/lib/rest-window-height/rest-window-height.directive.ts","../../../../projects/polpware/ngx-directives/src/lib/ngx-directives.module.ts","../../../../projects/polpware/ngx-directives/src/public-api.ts","../../../../projects/polpware/ngx-directives/src/polpware-ngx-directives.ts"],"sourcesContent":["import { Directive, ElementRef, AfterViewInit, Input, HostListener } from '@angular/core';\n\nfunction findAncestorByClass(el, cls: string) {\n    while (el.parentElement) {\n        el = el.parentElement;\n        if (el.classList.contains(cls)) {\n            break;\n        }\n    }\n    return el;\n}\n\n/**\n * Defines a directive for setting the height of the element in question according \n * to a formula.\n * \n */\n@Directive({\n    selector: '[polpRestWindowHeight]'\n})\nexport class RestWindowHeightDirective implements AfterViewInit {\n\n    @Input() bottomOffset = 0;\n    @Input() minHeight = 0;\n    @Input() fixedHeight = 0;\n    @Input() maxHeight = 0;\n    @Input() topOffset = 0;\n    @Input() containerClass = '';\n\n    constructor(private el: ElementRef) { }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    private computeHeight() {\n        const nativeElement = this.el.nativeElement;\n        // Case 1: fixed Height \n        if (this.fixedHeight) {\n            this.el.nativeElement.style.height = this.fixedHeight + 'px';\n            return;\n        }\n\n        let bodyRect: DOMRect;\n        if (this.containerClass) {\n            const p = findAncestorByClass(nativeElement, this.containerClass);\n            bodyRect = p.getBoundingClientRect();\n        } else {\n            bodyRect = document.body.getBoundingClientRect();\n        }\n\n        const elemRect = nativeElement.getBoundingClientRect();\n\n        const offset = elemRect.top - bodyRect.top;\n\n        const screenHeight = window.innerHeight;\n\n        let height = screenHeight - offset - this.bottomOffset - this.topOffset;\n\n        height = (height > this.minHeight) ? height : this.minHeight;\n\n        if (this.maxHeight) {\n            height = (height > this.maxHeight) ? this.maxHeight : height;\n        }\n\n        this.el.nativeElement.style.height = height + 'px';\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RestWindowHeightDirective } from './rest-window-height/rest-window-height.directive';\n\n@NgModule({\n    declarations: [\n        RestWindowHeightDirective],\n    imports: [\n    ],\n    exports: [RestWindowHeightDirective]\n})\nexport class PolpNgxDirectivesModule { }\n","/*\n * Public API Surface of ngx-directives\n */\n\nexport * from './lib/rest-window-height/rest-window-height.directive';\nexport * from './lib/ngx-directives.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}