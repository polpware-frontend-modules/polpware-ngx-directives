{"version":3,"sources":["ng://@polpware/ngx-directives/lib/rest-window-height/rest-window-height.directive.ts","ng://@polpware/ngx-directives/lib/ngx-directives.module.ts"],"names":["RestWindowHeightDirective","el","this","bottomOffset","minHeight","fixedHeight","maxHeight","topOffset","prototype","ngAfterViewInit","_this","setTimeout","computeHeight","onResize","event","nativeElement","style","height","bodyRect","document","body","getBoundingClientRect","offset","top","window","innerHeight","core","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","rf","ctx","$event","ɵɵresolveWindow","PolpNgxDirectivesModule","imports","declarations","exports"],"mappings":"qVAkBI,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EANXC,KAAAC,aAAe,EACfD,KAAAE,UAAY,EACZF,KAAAG,YAAc,EACdH,KAAAI,UAAY,EACZJ,KAAAK,UAAY,SAIrBP,EAAAQ,UAAAC,gBAAA,WAAA,IAAAC,EAAAR,KACIS,YAAW,WACPD,EAAKE,oBAKbZ,EAAAQ,UAAAK,SADA,SACSC,GADT,IAAAJ,EAAAR,KAEIS,YAAW,WACPD,EAAKE,oBAILZ,EAAAQ,UAAAI,cAAR,WACI,IAAMG,EAAgBb,KAAKD,GAAGc,cAE9B,GAAIb,KAAKG,YACLH,KAAKD,GAAGc,cAAcC,MAAMC,OAASf,KAAKG,YAAc,SAD5D,CAKA,IAAMa,EAAWC,SAASC,KAAKC,wBAGzBC,EAFSP,EAAcM,wBAELE,IAAML,EAASK,IAInCN,EAFiBO,OAAOC,YAEAH,EAASpB,KAAKC,aAAeD,KAAKK,UAE9DU,EAAUA,EAASf,KAAKE,UAAaa,EAASf,KAAKE,UAE/CF,KAAKI,YACLW,EAAUA,EAASf,KAAKI,UAAaJ,KAAKI,UAAYW,GAG1Df,KAAKD,GAAGc,cAAcC,MAAMC,OAASA,EAAS,wCA9CzCjB,GAAyB0B,EAAAC,kBAAAD,EAAAE,+CAAzB5B,EAAyB6B,UAAA,CAAA,CAAA,GAAA,uBAAA,KAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,6CAAzBC,EAAAnB,SAAAoB,MAAgB,EAAAP,EAAAQ,uKCP7B,SAAAC,4CAOaA,iEAAAA,IAAuBC,QAAA,CAJvB,4EAIAD,EAAuB,CAAAE,aAAA,CAL5BrC,GAAyBsC,QAAA,CAGnBtC","sourcesContent":["import { Directive, ElementRef, AfterViewInit, Input, HostListener } from '@angular/core';\n\n/**\n * Defines a directive for setting the height of the element in question according \n * to a formula.\n * \n */\n@Directive({\n    selector: '[polpRestWindowHeight]'\n})\nexport class RestWindowHeightDirective implements AfterViewInit {\n\n    @Input() bottomOffset = 0;\n    @Input() minHeight = 0;\n    @Input() fixedHeight = 0;\n    @Input() maxHeight = 0;\n    @Input() topOffset = 0;\n\n    constructor(private el: ElementRef) { }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        setTimeout(() => {\n            this.computeHeight();\n        });\n    }\n\n    private computeHeight() {\n        const nativeElement = this.el.nativeElement;\n        // Case 1: fixed Height \n        if (this.fixedHeight) {\n            this.el.nativeElement.style.height = this.fixedHeight + 'px';\n            return;\n        }\n\n        const bodyRect = document.body.getBoundingClientRect(),\n            elemRect = nativeElement.getBoundingClientRect();\n\n        const offset = elemRect.top - bodyRect.top;\n\n        const screenHeight = window.innerHeight;\n\n        let height = screenHeight - offset - this.bottomOffset - this.topOffset;\n\n        height = (height > this.minHeight) ? height : this.minHeight;\n\n        if (this.maxHeight) {\n            height = (height > this.maxHeight) ? this.maxHeight : height;\n        }\n\n        this.el.nativeElement.style.height = height + 'px';\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RestWindowHeightDirective } from './rest-window-height/rest-window-height.directive';\n\n@NgModule({\n    declarations: [\n        RestWindowHeightDirective],\n    imports: [\n    ],\n    exports: [RestWindowHeightDirective]\n})\nexport class PolpNgxDirectivesModule { }\n"]}